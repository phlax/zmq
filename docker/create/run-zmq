#!/app/bin/python -u
import asyncio
import functools
import os
import signal

from zope.dottedname.resolve import resolve


class Runner(object):

    @property
    def apps(self):
        return [
            (v.split(' ')[0], v.split(' ')[1:])
            for k, v
            in os.environ.items()
            if k.startswith('ZMQ_APP')]

    def run(self):
        loop = asyncio.get_event_loop()
        for signame in ('SIGINT', 'SIGTERM'):
            loop.add_signal_handler(
                getattr(signal, signame),
                functools.partial(self.stop, loop, signame))
        print("Event loop started.")
        for app, args in self.apps:
            handler = resolve(app)(loop, args[0])
            print(loop.run_until_complete(handler.handle(*args[1:])))
        try:
            loop.run_forever()
        finally:
            loop.close()

    def stop(self, loop, signame):
        print("got signal %s: exit, goodbye..." % signame)
        loop.stop()


def main():
    Runner().run()

if __name__ == '__main__':
    main()
