#!/app/bin/python -u
import asyncio
import functools
import os
import signal

from zope.dottedname.resolve import resolve


class Runner(object):

    @property
    def apps(self):
        return [
            (k[8:], v.split(' ')[0], v.split(' ')[1:])
            for k, v
            in os.environ.items()
            if k.startswith('ZMQ_APP')]

    @property
    def router(self):
        if 'ZMQ_ROUTER' in os.environ:
            router = os.environ['ZMQ_ROUTER'].split(' ')
            return router[0], router[1:]

    def run(self):
        loop = asyncio.get_event_loop()
        for signame in ('SIGINT', 'SIGTERM'):
            loop.add_signal_handler(
                getattr(signal, signame),
                functools.partial(self.stop, loop, signame))
        print("Event loop started.")
        if self.router:
            loop.run_until_complete(
                resolve(self.router[0])().route(*self.router[1]))
        for k, app, args in self.apps:
            handler = resolve(app)(k, args[0], loop=loop)
            response = loop.run_until_complete(handler.run(*args[1:]))
            if response is not None:
                print(response)
        try:
            loop.run_forever()
        finally:
            loop.close()

    def stop(self, loop, signame):
        print("got signal %s: exit, goodbye..." % signame)
        loop.stop()


def main():
    Runner().run()

if __name__ == '__main__':
    main()
